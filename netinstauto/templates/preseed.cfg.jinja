#### Contents of the preconfiguration file (for stretch)
# LOCALE
{%- for var in ['language', 'country', 'locale'] %}
{%- if debian_installer[var] is not none %}
d-i debian-installer/{{ var }} string {{ debian_installer[var] }}
{%- endif %}
{%- endfor %}
{%- if localechooser.supported_locales is not none %}
d-i localechooser/supported-locales multiselect {{ localechooser.supported_locales|join(', ') }}
{%- endif %}

# KEYBOARD
{%- if keyboard_configuration.xkb_keymap is not none %}
d-i keyboard-configuration/xkb-keymap select {{ keyboard_configuration.xkb_keymap }}
{%- endif %}
{%- if keyboard_configuration.toggle is not none %}
d-i keyboard-configuration/toggle select {{ keyboard_configuration.toggle }}
{%- endif %}

# NETWORK CONFIG
{%- if netcfg.enable is not none %}
d-i netcfg/enable boolean {{ netcfg.enable|lower }}
{%- endif %}
{%- if netcfg.choose_interface is not none %}
d-i netcfg/choose_interface select {{ netcfg.choose_interface }}
{%- endif %}
{%- if netcfg.link_wait_timeout is not none %}
d-i netcfg/link_wait_timeout string {{ netcfg.link_wait_timeout }}
{%- endif %}
{%- for var in ['dhcp_timeout', 'dhcpv6_timeout'] %}
{%- if netcfg[var] is not none %}
d-i netcfg/{{ var }} string {{ netcfg[var] }}
{%- endif %}
{%- endfor %}
{%- if netcfg.disable_autoconfig is not none %}
d-i netcfg/disable_autoconfig boolean {{ netcfg.disable_autoconfig|lower }}
{%- endif %}
{%- if netcfg.dhcp_failed is not none %}
d-i netcfg/dhcp_failed note
{%- endif %}
{%- if netcfg.dhcp_options %}
d-i netcfg/dhcp_options select {{ netcfg.dhcp_options }}
{%- endif %}
{%- for var in ['get_ipaddress', 'get_netmask', 'get_gateway', 'get_nameservers'] %}
{%- if netcfg[var] is not none %}
d-i netcfg/{{ var }} string {{ netcfg[var] }}
{%- endif %}
{%- endfor %}
{%- if netcfg.confirm_static is not none %}
d-i netcfg/confirm_static boolean {{ netcfg.confirm_static|lower }}
{%- endif %}

# NETWORK CONSOLE
{%- if anna.choose_modules is not none %}
d-i anna/choose_modules string {{ anna.choose_modules }}
{%- endif %}
{%- if network_console.authorized_keys_url is not none %}
d-i network-console/authorized_keys_url string {{ network_console.authorized_keys_url }}
{%- endif %}
{%- for var in ['password', 'password-again'] %}
{%- if network_console[var] is not none %}
d-i network-console/{{ var }} password {{ network_console[var] }}
{%- endif %}
{%- endfor %}

# MIRROR SETTINGS
d-i mirror/country string manual
{%- for var in ['hostname', 'directory', 'proxy'] %}
{%- if mirror[var] is not none %}
d-i mirror/http/{{ var }} string {{ mirror[var] }}
{%- endif %}
{%- endfor %}
{%- if mirror.suite is not none  %}
d-i mirror/suite {{ mirror.suite }}
{%- endif %}
{%- if mirror.udeb_suite is not none  %}
d-i mirror/udeb/suite {{ mirror.udeb_suite }}
{% endif %}

# ACCOUNT SETUP
{%- if passwd.root_login is not none %}
d-i passwd/root-login boolean {{ passwd.root_login|lower }}
{%- endif %}
{%- if passwd.make_user is not none %}
d-i passwd/make-user boolean {{ passwd.make_user|lower }}
{%- endif %}
{%- for var in ['root-password', 'root-password-again', 'root-password-crypted'] %}
{%- if passwd[var] is not none %}
d-i passwd/{{ var }} password {{ passwd[var] }}
{%- endif %}
{%- endfor %}
{%- if passwd['user-fullname'] is not none %}
d-i passwd/user-fullname string {{ passwd['user-fullname'] }}
{%- endif %}
{%- if passwd['username'] is not none %}
d-i passwd/username string {{ passwd['username'] }}
{%- endif %}
{%- for var in ['user-password', 'user-password-again', 'user-password-crypted'] %}
{%- if passwd[var] is not none %}
d-i passwd/{{ var }} password {{ passwd[var] }}
{%- endif %}
{%- endfor %}
{%- for var in ['user-uid', 'user-gid'] %}
{%- if passwd[var] is not none %}
d-i passwd/{{ var }} string {{ passwd[var] }}
{%- endif %}
{%- endfor %}
{%- if passwd['user-default-groups'] is not none %}
d-i passwd/user-default-groups string {{ passwd['user-default-groups']|join(' ') }}
{%- endif %}
{%- if clock_setup.utc is not none %}
d-i clock-setup/utc boolean {{ clock_setup.utc|lower }}
{%- endif %}
{%- if time.zone is not none %}
d-i time/zone string {{ time.zone }}
{%- endif %}
{%- if clock_setup.ntp is not none %}
d-i clock-setup/ntp boolean {{ clock_setup.ntp|lower }}
{%- endif %}
{%- if clock_setup.ntp_server is not none %}
d-i clock-setup/ntp-server string {{ clock_setup.ntp_server }}
{%- endif %}

# PARTITIONING
{%- if partman_auto.init_automatically_partition is not none %}
d-i partman-auto/init_automatically_partition select {{ partman_auto.init_automatically_partition }}
{%- endif %}
{%- for var in ['disk', 'method'] %}
{%- if partman_auto[var] is not none %}
d-i partman-auto/{{ var }} string {{ partman_auto[var] }}
{%- endif %}
{%- endfor %}
{%- if partman_lvm.device_remove_lvm is not none %}
d-i partman-lvm/device_remove_lvm boolean {{ partman_lvm.device_remove_lvm|lower }}
{%- endif %}
{%- if partman_md.device_remove_md is not none %}
d-i partman-md/device_remove_md boolean {{ partman_md.device_remove_md|lower }}
{%- endif %}
{%- for var in ['confirm', 'confirm_nooverwrite'] %}
{%- if partman_lvm[var] is not none %}
d-i partman-lvm/{{ var }} boolean {{ partman_lvm[var]|lower }}
{%- endif %}
{%- endfor %}
{%- if partman_auto.choose_recipe is not none %}
d-i partman-auto/choose_recipe select {{ partman_auto.choose_recipe }}
{%- endif %}
{%- for var in ['expert_recipe_file', 'expert_recipe'] %}
{%- if partman_auto[var] is not none %}
d-i partman-auto/{{ var }} string {{ partman_auto[var] }}
{%- endif %}
{%- endfor %}
{%- if partman_partitioning.confirm_write_new_label is not none %}
d-i partman-partitioning/confirm_write_new_label boolean {{ partman_partitioning.confirm_write_new_label|lower }}
{%- endif %}
{%- if partman.choose_partition is not none %}
d-i partman/choose_partition select {{ partman.choose_partition }}
{%- endif %}
{%- for var in ['confirm', 'confirm_nooverwrite'] %}
{%- if partman[var] is not none %}
d-i partman/{{ var }} boolean {{ partman[var]|lower }}
{%- endif %}
{%- endfor %}
{%- if partman.mount_style is not none %}
d-i partman/mount_style select {{ partman.mount_style }}
{%- endif %}

# APT INSTALL
{%- if base_installer.install_recommends is not none %}
d-i base-installer/install-recommends boolean {{ base_installer.install_recommends|lower }}
{%- endif %}
{%- if base_installer.kernel_image is not none %}
d-i base-installer/kernel/image string {{ base_installer.kernel_image }}
{%- endif %}
{%- for var in ['non-free', 'contrib', 'use_mirror'] %}
{%- if apt_setup[var] is not none %}
d-i apt-setup/{{ var }} boolean {{ apt_setup[var]|lower }}
{%- endif %}
{%- endfor %}
{%- if apt_setup.services_select is not none %}
d-i apt-setup/services-select multiselect {{ apt_setup.services_select|join(', ') }}
{%- endif %}
{%- if apt_setup.security_host is not none %}
d-i apt-setup/security_host string {{ apt_setup.security_host }}
{%- endif %}
{%- if debian_installer.allow_unauthenticated is not none %}
d-i debian-installer/allow_unauthenticated boolean {{ debian_installer.allow_unauthenticated }}
{%- endif %}
{%- if apt_setup.multiarch is not none %}
d-i apt-setup/multiarch string {{ apt_setup.multiarch }}
{%- endif %}
{%- if tasksel.first is not none %}
tasksel tasksel/first multiselect {{ tasksel.first|join(', ') }}
{%- endif %}
{%- if pkgsel.include is not none %}
d-i pkgsel/include string {{ pkgsel.include|join(' ') }}
{%- endif %}
{%- if pkgsel.upgrade is not none %}
d-i pkgsel/upgrade select {{ pkgsel.upgrade }}
{%- endif %}
{%- if popcon.participate is not none %}
popularity-contest  popularity-contest/participate boolean {{ popcon.participate|lower }}
{%- endif %}

# BOOTLOADER
{%- if grub_installer.skip is not none %}
d-i grub-installer/skip boolean {{ grub_installer.skip|lower }}
{%- endif %}
{%- if lilo_installer.skip is not none %}
d-i lilo-installer/skip boolean {{ lilo_installer.skip|lower }}
{%- endif %}
{%- if grub_installer.only_debian is not none %}
d-i grub-installer/only_debian boolean {{ grub_installer.only_debian|lower }}
{%- endif %}
{%- if grub_installer.with_other_os is not none %}
d-i grub-installer/with_other_os boolean {{ grub_installer.with_other_os|lower }}
{%- endif %}
{%- if grub_installer.bootdev is not none %}
d-i grub-installer/bootdev string {{ grub_installer.bootdev }}
{%- endif %}
{%- for var in ['password', 'password-again', 'password-crypted'] %}
{%- if grub_installer[var] is not none %}
d-i grub-installer/{{ var }} password {{ grub_installer[var] }}
{%- endif %}
{%- endfor %}
{%- if finish_install.keep_consoles is not none %}
d-i finish-install/keep-consoles boolean {{ finish_install.keep_consoles|lower }}
{%- endif %}
{%- if finish_install.reboot_in_progress is not none %}
d-i finish-install/reboot_in_progress note
{%- endif %}
{%- if cdrom_detect.eject is not none %}
d-i cdrom-detect/eject boolean {{ cdrom_detect.eject|lower }}
{%- endif %}
{%- if debian_installer.exit_halt is not none %}
d-i debian-installer/exit/halt boolean {{ debian_installer.exit_halt|lower }}
{%- endif %}
{%- if debian_installer.exit_poweroff is not none %}
d-i debian-installer/exit/poweroff boolean {{ debian_installer.exit_poweroff|lower }}
{%- endif %}
{%- if partman.early_command is not none %}
d-i partman/early_command {{ partman.early_command }}
{%- endif %}
{%- for var in ['early_command', 'late_command'] %}
{%- if preseed[var] is not none %}
d-i preseed/{{ var }} string {{ preseed[var] }}
{%- endif %}
{%- endfor %}




